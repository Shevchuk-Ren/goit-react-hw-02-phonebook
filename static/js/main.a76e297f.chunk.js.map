{"version":3,"sources":["components/Phonebook/Phonebook.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App/App.js","index.js"],"names":["Phonebook","state","name","number","handleSubmitForm","evt","preventDefault","props","onSubmit","reset","handleInputChange","setState","currentTarget","value","this","id","uuidv4","type","pattern","title","required","onChange","onClick","addNameFhoneBook","React","Component","ContactList","contacts","onDelete","className","map","Filter","filter","App","filterContacts","console","log","formSubmithanler","data","prevState","deleteContact","contact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAmEeA,E,4MA/DbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,iBAAmB,SAAAC,GACjBA,EAAIC,iBACJ,EAAKC,MAAMC,SAAS,EAAKP,OACzB,EAAKQ,S,EAGPC,kBAAoB,SAAAL,GAClB,EAAKM,SAAL,eACGN,EAAIO,cAAcV,KAAOG,EAAIO,cAAcC,S,EAIhDJ,MAAQ,WACN,EAAKE,SAAS,CACZT,KAAM,GACNC,OAAQ,M,4CAIZ,WACE,MAAyBW,KAAKb,MAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACd,OACE,uBAAMK,SAAUM,KAAKV,iBAArB,UACE,yCAEE,uBACEW,GAAIC,cACJC,KAAK,OACLJ,MAAOX,EACPA,KAAK,OACLgB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUP,KAAKJ,uBAInB,2CAEE,uBACEK,GAAIC,cACJC,KAAK,MACLf,KAAK,SACLW,MAAOV,EACPe,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUP,KAAKJ,uBAGnB,wBAAQO,KAAK,SAASK,QAASR,KAAKS,iBAApC,gC,GAxDgBC,IAAMC,WCWfC,EAZK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,SAAb,OAClB,oBAAIC,UAAU,cAAd,SACGF,EAASG,KAAI,gBAAG5B,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQY,EAAjB,EAAiBA,GAAjB,OACZ,+BACE,iCAAOb,EAAP,OACA,sCAASC,KACT,wBAAQmB,QAAS,kBAAMM,EAASb,IAAhC,sBAHOA,SCoBAgB,EAvBA,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQX,EAAX,EAAWA,SAAX,OACb,+BACE,0DAEE,uBACEJ,KAAK,OACLJ,MAAOmB,EACP9B,KAAK,SACLgB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUA,UCqDHY,E,4MA3DbhC,MAAQ,CACN+B,OAAQ,GACRL,SAAU,CACR,CAAEZ,GAAI,OAAQb,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEY,GAAI,OAAQb,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEY,GAAI,OAAQb,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEY,GAAI,OAAQb,KAAM,iBAAkBC,OAAQ,e,EAIlD+B,eAAiB,a,EACjBxB,kBAAoB,SAAAL,GAClB,EAAKM,SAAS,CACZqB,OAAQ3B,EAAIO,cAAcC,QAE5BsB,QAAQC,IAAI,EAAKnC,MAAM+B,S,EAGzBK,iBAAmB,SAAAC,GACjBA,EAAKvB,GAAKC,cAEV,EAAKL,UAAS,SAAA4B,GAAS,MAAK,CAC1BZ,SAAS,GAAD,mBAAMY,EAAUZ,UAAhB,CAA0BW,QAGpCH,QAAQC,IAAI,EAAKnC,MAAM0B,SAAvB,c,EAGFa,cAAgB,SAAAzB,GACdoB,QAAQC,IAAIrB,EAAZ,QACA,EAAKJ,UAAS,SAAA4B,GAAS,MAAK,CAC1BZ,SAAUY,EAAUZ,SAASK,QAAO,SAAAS,GAAO,OAAIA,EAAQ1B,KAAOA,U,4CAIlE,WACE,MAA6BD,KAAKb,MAA1B0B,EAAR,EAAQA,SAAUK,EAAlB,EAAkBA,OAElB,OACE,gCACE,oCACE,2CACA,cAAC,EAAD,CAAWxB,SAAUM,KAAKuB,sBAG5B,oCACE,0CACA,cAAC,EAAD,CAAQhB,SAAUP,KAAKJ,kBAAmBsB,OAAQA,IAElD,cAAC,EAAD,CACEL,SAAUA,EACVC,SAAUd,KAAK0B,0B,GApDThB,IAAMC,WCDxBiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a76e297f.chunk.js","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\nimport React from 'react';\n\nclass Phonebook extends React.Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleSubmitForm = evt => {\n    evt.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  handleInputChange = evt => {\n    this.setState({\n      [evt.currentTarget.name]: evt.currentTarget.value,\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmitForm}>\n        <label>\n          Name\n          <input\n            id={uuidv4()}\n            type=\"text\"\n            value={name}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.handleInputChange}\n          />\n        </label>\n\n        <label>\n          Number\n          <input\n            id={uuidv4()}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={this.handleInputChange}\n          />\n        </label>\n        <button type=\"submit\" onClick={this.addNameFhoneBook}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default Phonebook;\n","import React from 'react';\n\nconst ContactList = ({ contacts, onDelete }) => (\n  <ul className=\"contactList\">\n    {contacts.map(({ name, number, id }) => (\n      <li key={id}>\n        <span>{name} </span>\n        <span>: {number}</span>\n        <button onClick={() => onDelete(id)}>Delete</button>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default ContactList;\n","import React from 'react';\n\nconst Filter = ({ filter, onChange }) => (\n  <form>\n    <label>\n      Find contacts by name\n      <input\n        type=\"text\"\n        value={filter}\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        onChange={onChange}\n      />\n    </label>\n  </form>\n);\n\n// class Filter extends React.Component{\n\n//     render()\n\n// }\n\nexport default Filter;\n","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Phonebook from '../Phonebook/Phonebook';\nimport ContactList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\n\nclass App extends React.Component {\n  state = {\n    filter: '',\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n  };\n\n  filterContacts = () => {};\n  handleInputChange = evt => {\n    this.setState({\n      filter: evt.currentTarget.value,\n    });\n    console.log(this.state.filter);\n  };\n\n  formSubmithanler = data => {\n    data.id = uuidv4();\n\n    this.setState(prevState => ({\n      contacts: [...prevState.contacts, data],\n    }));\n\n    console.log(this.state.contacts, `take data`);\n  };\n\n  deleteContact = id => {\n    console.log(id, `yiii`);\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    return (\n      <div>\n        <section>\n          <h2>Phonebook</h2>\n          <Phonebook onSubmit={this.formSubmithanler} />\n        </section>\n\n        <section>\n          <h2>Contacts</h2>\n          <Filter onChange={this.handleInputChange} filter={filter}></Filter>\n\n          <ContactList\n            contacts={contacts}\n            onDelete={this.deleteContact}\n          ></ContactList>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}